@*//===================================================================================
// Â© CBP - linkedin.com/in/
//===================================================================================*@

@using WebApp.Presentacion.WebMvc5.Resources
@model WebApp.Presentacion.WebMvc5.ViewModels.AlimFindViewModel

@{ 
	ViewBag.Title = "Find Alim"; 
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-9">
        <h2>	@ViewBag.Title</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home")">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a>Alim</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>    @ViewBag.Title</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox-title">
        <div class="ibox-tools">		
            @*<a href="@Url.Action("Index", "Home")"
               class="btn btn-white btn-sm" data-toggle="tooltip" data-placement="top" title="@PresentationResources.HomePage">
                <i class="fa fa-home"></i> @PresentationResources.HomePage*@
            </a>
            <a href="@Url.Action(@PresentationResources.Add, "Alim")"
               class="btn btn-primary btn-xs" data-toggle="tooltip" data-placement="top" title="@PresentationResources.Add">
                <i class="fa fa-plus-square-o"></i> @PresentationResources.Add
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">

                <div class="ibox-content">

                    @using (Ajax.BeginForm(new AjaxOptions
                    {
                        LoadingElementDuration = 400,
                        LoadingElementId = "busyinfo",
                        UpdateTargetId = "search-result",
                        OnBegin = "onPetitionBegin",
                        OnComplete = "onPetitionComplete"
                    }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div id="search-form">
									<div class="row">


										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.Id):
												
												@Html.EditorFor(model => model.Alim.Id, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.Id, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.Nombre):
												
												@Html.EditorFor(model => model.Alim.Nombre, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.Nombre, "", new { @class = "text-danger" })
											</div>
										</div>

										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.IdEstado):
												
												@Html.EditorFor(model => model.Alim.IdEstado, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.IdEstado, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.FactorRendimiento):
												
												@Html.EditorFor(model => model.Alim.FactorRendimiento, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.FactorRendimiento, "", new { @class = "text-danger" })
											</div>
										</div>

										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.FactorDescuento):
												
												@Html.EditorFor(model => model.Alim.FactorDescuento, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.FactorDescuento, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.Fraccionado):
												
												@Html.EditorFor(model => model.Alim.Fraccionado, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.Fraccionado, "", new { @class = "text-danger" })
											</div>
										</div>

										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.ConversionInyectado):
												
												@Html.EditorFor(model => model.Alim.ConversionInyectado, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.ConversionInyectado, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.FactorConversion):
												
												@Html.EditorFor(model => model.Alim.FactorConversion, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.FactorConversion, "", new { @class = "text-danger" })
											</div>
										</div>

										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.Inactivo):
												
												@Html.EditorFor(model => model.Alim.Inactivo, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.Inactivo, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.NomAbreviado):
												
												@Html.EditorFor(model => model.Alim.NomAbreviado, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.NomAbreviado, "", new { @class = "text-danger" })
											</div>
										</div>

										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.NomCientifico):
												
												@Html.EditorFor(model => model.Alim.NomCientifico, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.NomCientifico, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.esAlimento):
												
												@Html.EditorFor(model => model.Alim.esAlimento, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.esAlimento, "", new { @class = "text-danger" })
											</div>
										</div>

										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.NT_MedidaBase):
												
												@Html.EditorFor(model => model.Alim.NT_MedidaBase, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.NT_MedidaBase, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.IdUniMed):
												@Html.DropDownListFor(model => model.Alim.IdUniMed, Model.UniMeds, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.IdUniMed, "", new { @class = "text-danger" })
											</div>
										</div>

										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.IdAlimGrp):
												@Html.DropDownListFor(model => model.Alim.IdAlimGrp, Model.Alim_Grps, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.IdAlimGrp, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.IdAlimFte):
												@Html.DropDownListFor(model => model.Alim.IdAlimFte, Model.Alim_Fuentes, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.IdAlimFte, "", new { @class = "text-danger" })
											</div>
										</div>

										<div class="col-sm-2">
											<div class="form-group">
												@Html.LabelFor(model => model.Alim.FechaRegistro):
												
												@Html.EditorFor(model => model.Alim.FechaRegistro, new { @class = "form-control" })
												@Html.ValidationMessageFor(model => model.Alim.FechaRegistro, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="btn-group">
											<button class="btn btn-white btn-sm" type="reset" name="reset"
													data-toggle="tooltip" data-placement="top"
													title="@PresentationResources.Reset">
												<i class="fa fa-undo"></i> @PresentationResources.Reset
											</button>

											<button class="btn btn-lg btn-primary" type="submit" name="find"
													data-toggle="tooltip" data-placement="top"
													title="@PresentationResources.Find">
												<i class="fa fa-binoculars"></i> @PresentationResources.Find
											</button>
										</div>
									</div>

                                </div>
		
								<div id="viewform" class="font-bold text-navy">[@PresentationResources.ViewForm] <i class="fa fa-unsorted"></i></div>
                                <div id="busyinfo" class="sk-spinner sk-spinner-fading-circle">
                                    <div class="sk-circle1 sk-circle"></div>
                                    <div class="sk-circle2 sk-circle"></div>
                                    <div class="sk-circle3 sk-circle"></div>
                                    <div class="sk-circle4 sk-circle"></div>
                                    <div class="sk-circle5 sk-circle"></div>
                                    <div class="sk-circle6 sk-circle"></div>
                                    <div class="sk-circle7 sk-circle"></div>
                                    <div class="sk-circle8 sk-circle"></div>
                                    <div class="sk-circle9 sk-circle"></div>
                                    <div class="sk-circle10 sk-circle"></div>
                                    <div class="sk-circle11 sk-circle"></div>
                                    <div class="sk-circle12 sk-circle"></div>
                                </div>
								@{ Html.RenderPartial("_AlimFindPartialView"); }
                        </div>
                        
                    }

                </div>
            </div>
    </div>
</div>

@section Scripts 
{
    <script>
        $(document).on("click", "#viewform", function () {
            $("#bcenter").show("slow");
			$("#search-form").show("slow");
            $("#viewform").hide("slow");
        });

        function onPetitionBegin() {
            $("#search-result").hide("slow");
            $("#bcenter").hide("slow");
			$("#search-form").hide("slow");
            $("#viewform").show("slow");
        }

        function onPetitionComplete() {
            $("#search-result").show("slow");
        }
    </script>
}
